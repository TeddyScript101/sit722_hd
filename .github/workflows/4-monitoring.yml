name: Stage4 - Monitoring Setup

on:
  workflow_run:
    workflows: ["Stage3 - Production Deployment"]
    types:
      - completed
  workflow_dispatch: # <-- allows manual triggering

jobs:
  deploy-monitoring:
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP: sit722devopsteddy-rg
      AKS_NAME: sit722devopsteddy-aks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Connect to AKS
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_NAME
          kubectl cluster-info

      - name: Ensure monitoring namespace exists
        run: |
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Prometheus
        run: |
          echo "📦 Deploying Prometheus..."
          kubectl apply -f k8s/prometheus-configmap.yaml
          kubectl apply -f k8s/prometheus-rbac.yaml
          kubectl apply -f k8s/prometheus-deployment.yaml

      - name: Deploy Grafana
        run: |
          echo "📦 Deploying Grafana..."
          kubectl apply -f k8s/grafana-deployment.yaml

      - name: Verify Monitoring Services
        run: |
          kubectl get pods -n monitoring
          kubectl get svc -n monitoring

      - name: Cleanup on Failure
        if: ${{ failure() }}
        run: |
          echo "⚠️ Deployment failed. Cleaning up monitoring resources..."
          kubectl delete -f k8s/prometheus-deployment.yaml --ignore-not-found
          kubectl delete -f k8s/prometheus-rbac.yaml --ignore-not-found
          kubectl delete -f k8s/prometheus-configmap.yaml --ignore-not-found
          kubectl delete -f k8s/grafana-deployment.yaml --ignore-not-found
